:root {
  /* How wide is our sidebar next to the 3d view? */
  --sidebar-width: 300px;
  /* How tall is the toolbar at the bottom of the sidebar? */
  --toolbar-height: 25px;
  /* How tall are the infobox and dialog headers? */
  --header-height: 25px;
  /* What is our color scheme? */
  --dark: #333;
  --light: #fff;
  --bad: #a00;
  --good: #0a0;
  --pending: #aa0;
}

/* Global defaults for not being ugly */
body {
  font-size: 14px;
  line-height: 1.42857143;
  color: var(--dark);
  background-color: var(--light);
  font-family: 'Nunito Sans', serif;
}

#scene {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: calc(100% - var(--sidebar-width));
}

.loading-overlay {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: calc(100% - var(--sidebar-width));
  z-index: 9000;
  color: var(--light);
  background-color: black;
  font-family: 'Voltaire', sans-serif;
  display: none;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.loading-caption {
  margin-bottom: 2px;
  padding-bottom: 0;
  font-size: 20px;
}

.loading-distraction {
  transform-origin: 50% 50%;
  animation: spin 3s linear infinite;
  font-size: 30px;
}

progress {
  width: 200px;
  height: 20px;
  background-color: var(--light);
  border-radius: 20px;
}
progress::-webkit-progress-bar {
  width: 200px;
  height: 20px;
  background-color: var(--light);
  border-radius: 20px;
}

/*
  This can't be comma'd with progress::-moz-progress-bar or it doesn't work.
  There's also no standard version of it.
*/
progress::-webkit-progress-value {
  background-color: green;
  border-radius: 20px;
}
progress::-moz-progress-bar {
  background-color: green;
  border-radius: 20px;
}

#sidebar {
  position: absolute;
  width: var(--sidebar-width);
  top: 0;
  right: 0;
  bottom: 0;
  border: 1px solid var(--dark);
}

#toolbar {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: var(--toolbar-height);
  color: var(--light);
  background-color: var(--dark);
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
}

.toolbar-tool {
  margin-left: 2px;
  height: calc(var(--toolbar-height) - 4px);
}

#infobox {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: var(--toolbar-height);
  border: 1px solid var(--dark);
}

.infobox-header {
  color: var(--light);
  background-color: var(--dark);
  font-family: 'Voltaire', sans-serif;
  text-align: center;
  font-size: calc(var(--header-height) - 8px);
  height: var(--header-height);
}

.infobox-back {
  position: absolute;
  left: 2px;
  top: 2px;
  height: calc(var(--header-height) - 4px);
}

.infobox-body {
  position: absolute;
  left: 0;
  top: var(--header-height);
  right: 0;
  bottom: 0;
  overflow-y: scroll;
  overflow-x: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
}

.infobox-table {
}

.address {
  display: inline-block;
  word-break: break-all;
}

.address-widget {
  display: inline-block;
}

table, th, td {
  border: 1px solid var(--dark);
}

.dialog {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  z-index: 10000;
  color: var(--dark);
  background-color: var(--light);
  display: flex;
  flex-direction: column;
  align-items: center;
}

.dialog-body {
  padding: 5px;
  margin-bottom: 5px;
  margin-left: 2em;
  position: absolute;
  left: 0;
  top: var(--header-height);
  right: 0;
  bottom: 0;
  overflow-y: scroll;
}

.dialog-header {
  color: var(--light);
  background-color: var(--dark);
  font-family: 'Voltaire', sans-serif;
  text-align: center;
  font-size: calc(var(--header-height) - 8px);
  height: var(--header-height);
  width: 100%;
}

.dialog-close {
  position: absolute;
  right: 2px;
  top: 2px;
  height: 21px;
}

.dialog p {
  max-width: 40em;
  font-size: 110%;
}

.status.valid {
   color: var(--good);
   background-color: var(--light);
}

.status.invalid {
   color: var(--bad);
   background-color: var(--light);
}

.status.pending {
   color: var(--pending);
   background-color: var(--light);
}

/* Throbber needs inline-block display to be able to spin */
.throbber {
  display: inline-block;
}

.throbber.waiting {
  transform-origin: 50% 50%;
  animation: spin 2s linear infinite;
  opacity: 1;
}

.throbber.success {
  opacity: 0;
  transition: opacity 5s ease-in-out;
}

@keyframes spin {
  100% {
    transform:rotate(360deg);
  }
}
